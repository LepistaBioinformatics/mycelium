// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "cargo prisma"
  output   = "./prisma.rs"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

// -----------------------------------------------------------------------------
// USER RELATED MODELS
// -----------------------------------------------------------------------------

model User {
  // Primary key
  id String @id @default(uuid())

  // Model fields
  username   String    @db.VarChar(140)
  email      String    @db.VarChar(140)
  first_name String    @db.VarChar(140)
  last_name  String    @db.VarChar(140)
  is_active  Boolean   @default(true)
  created    DateTime  @default(now()) @db.Timestamptz(6)
  updated    DateTime? @updatedAt @db.Timestamptz(6)

  // Backward relationship fields
  accounts Account[]

  // Db compatibility and extra maps
  @@unique([email])
  @@map("user")
}

model Role {
  // Primary key
  id String @id @default(uuid())

  // Model fields
  name        String @db.VarChar(140)
  description String @db.VarChar(255)

  // Backward relationship fields
  user_roles GuestRole[]

  // Db compatibility and extra maps
  @@map("role")
}

model GuestRole {
  // Primary key
  id String @id @default(uuid())

  // Model fields
  name        String  @db.VarChar(140)
  description String? @db.VarChar(255)
  role        Role    @relation(fields: [role_id], references: [id])
  role_id     String
  permissions Int[]

  // Backward relationship fields
  guest_users GuestUser[]

  // Db compatibility and extra maps
  @@unique([name])
  @@map("guest_role")
}

model GuestUser {
  // Primary key
  id String @id @default(uuid())

  // Model fields
  email         String
  guest_role    GuestRole @relation(fields: [guest_role_id], references: [id])
  guest_role_id String
  created       DateTime  @default(now()) @db.Timestamptz(6)
  updated       DateTime? @updatedAt @db.Timestamptz(6)

  // Backward relationship fields
  accounts GuestUserOnAccount[]

  // Db compatibility and extra maps
  @@unique([email, guest_role_id])
  @@map("guest_user")
}

// -----------------------------------------------------------------------------
// ACCOUNT RELATED MODELS
// -----------------------------------------------------------------------------

model AccountType {
  // Primary key
  id String @id @default(uuid())

  // Model fields
  name            String  @db.VarChar(128)
  description     String  @db.VarChar(255)
  is_subscription Boolean @default(false)
  is_manager      Boolean @default(false)
  is_staff        Boolean @default(false)

  // Backward relationship fields
  accounts Account[]

  // Db compatibility and extra maps
  @@unique([name])
  @@map("account_type")
}

model Account {
  // Primary key
  id String @id @default(uuid())

  // Model fields
  name            String      @db.VarChar(64)
  owner           User        @relation(fields: [owner_id], references: [id])
  owner_id        String      @unique
  account_type    AccountType @relation(fields: [account_type_id], references: [id])
  account_type_id String
  created         DateTime    @default(now()) @db.Timestamptz(6)
  updated         DateTime?   @updatedAt @db.Timestamptz(6)
  is_active       Boolean     @default(true)
  is_checked      Boolean     @default(false)
  is_archived     Boolean     @default(false)

  // Backward relationship fields
  guest_users GuestUserOnAccount[]

  // Db compatibility and extra maps
  @@unique([name, owner_id])
  @@map("account")
}

model GuestUserOnAccount {
  // Model fields
  guest_user    GuestUser @relation(fields: [guest_user_id], references: [id], onDelete: Cascade)
  guest_user_id String
  account       Account   @relation(fields: [account_id], references: [id])
  account_id    String
  created       DateTime  @default(now()) @db.Timestamptz(6)

  // Db compatibility and extra maps
  @@id([guest_user_id, account_id])
  @@map("guest_user_on_account")
}

// -----------------------------------------------------------------------------
// ERROR C0DE RELATED MODELS
// -----------------------------------------------------------------------------

model ErrorCode {
  // Primary keys
  code   Int    @default(autoincrement())
  prefix String

  // Model fields
  message     String  @db.VarChar(255)
  details     String? @db.VarChar(255)
  is_internal Boolean @default(false)
  is_native   Boolean @default(false)

  // Db compatibility and extra maps
  @@id([prefix, code])
  @@map("error_code")
}

// -----------------------------------------------------------------------------
// WEBHOOK MODELS
// -----------------------------------------------------------------------------

model Webhook {
  // Primary key
  id String @id @default(uuid())

  // Model fields
  name        String    @db.VarChar(140)
  description String    @db.VarChar(255)
  target      String    @db.VarChar(15)
  url         String    @db.VarChar(255)
  is_active   Boolean   @default(true)
  created     DateTime  @default(now()) @db.Timestamptz(6)
  updated     DateTime? @updatedAt @db.Timestamptz(6)

  // Db compatibility and extra maps
  @@unique([url, target])
  @@map("webhook")
}
