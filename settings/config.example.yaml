# ? ----------------------------------------------------------------------------
# ? CORE CONFIGURATIONS
# ? ----------------------------------------------------------------------------
core:
  token:
    tokenExpiration: 3600
    tokenSecretKey:
      env: MYC_TOKEN_SECRET_KEY
    tokenHmacSecret:
      env: MYC_TOKEN_HMAC_SECRET
    noreplyEmail:
      env: MYC_TOKEN_EMAIL_NOTIFIER
    supportEmail:
      env: MYC_TOKEN_SUPPORT_EMAIL

# ? ----------------------------------------------------------------------------
# ? SQL DATABASE ADAPTER SETTINGS
# ? ----------------------------------------------------------------------------
prisma:
  databaseUrl:
    env: MYC_DATABASE_URL

# ? ----------------------------------------------------------------------------
# ? SMTP ADAPTER SETTINGS SETTINGS
#
# SMTP value should be set disabled or configured with the smtp host, username,
# and password. Case the smtp is disabled, the email notification will not be
# sent.
#
# ? ----------------------------------------------------------------------------
# Use the below commented line to disable smtp protocol usage.
# smtp: disabled
smtp:
  host: "smtp.gmail.com"
  username:
    env: MYC_SMTP_USERNAME
  password:
    env: MYC_SMTP_PASSWORD

# ? ----------------------------------------------------------------------------
# ? AUTHENTICATION SETTINGS
#
# Authentication settings are used to configure the authentication methods.
# Default method is internal. It uses the database adapter plus the redis to
# flow along the users life cycle. Case the internal flow is enabled, user
# should configure the redis adapters using the adapters yaml file.
#
# It is possible to use third party authentication methods like google and azure
# oauth providers.
#
# ? ----------------------------------------------------------------------------
auth:
  # Internal authentication is the default authentication method. It uses the
  # database adapter plus the redis to flow along the users life cycle.
  internal:
    jwtSecret:
      env: MYC_INTERNAL_JWT_SECRET
    jwtExpiresIn: 43200 # 12 hours

  # Google third party authentication. It uses the google oauth2 to authenticate
  # the user. It requires a valid client id and secret.
  google:
    clientOrigin: http://localhost:3000
    jwtSecret:
      env: MYC_GOOGLE_JWT_SECRET
    jwtExpiresIn: 60m
    jwtMaxAge: 60
    oauthClientId:
      env: MYC_GOOGLE_OAUTH_CLIENT_ID
    oauthClientSecret:
      env: MYC_GOOGLE_OAUTH_CLIENT_SECRET
    oauthRedirectUrl: http://localhost:3000

  # Azure third party authentication. It uses the azure oauth2 to authenticate
  # the user. It does not require a valid client id and secret. Working only
  # with the azure active directory.
  azure: disabled

# ? ----------------------------------------------------------------------------
# ? API PORT SETTINGS SETTINGS
# ? ----------------------------------------------------------------------------
api:
  serviceIp: 0.0.0.0
  servicePort: 8080
  serviceWorkers: 1
  gatewayTimeout: 60
  allowedOrigins:
  - http://localhost:8080
  - http://localhost:3000

  # ? --------------------------------------------------------------------------
  # ? LOGGING SETTINGS
  # ? --------------------------------------------------------------------------
  loggingLevel: actix_web=debug,mycelium_base=debug,myc_api=debug

  # ? --------------------------------------------------------------------------
  # ? API GATEWAY TLS SETTINGS
  #
  # TLS settings are used to configure the api gateway tls. It is possible to
  # configure the tls using the tls_cert_path and tls_key_path. Case the tls
  # cert path and tls key path are not configured, the api gateway will not be
  # able to connect to secure forwarding routes.
  #
  # ? --------------------------------------------------------------------------
  tls: disabled
  #  tlsCertPath: "cert.pem"
  #  tlsKeyPath: "key.pem"

  # ? --------------------------------------------------------------------------
  # ? API GATEWAY ROUTE CONFIGURATION
  #
  # Routes file should be used to configure the api gateway routes. Routes file
  # should contains the following structure:
  #
  # services:
  #   - name: cat
  #     host: catfact.ninja
  #
  #     healthCheck:
  #       path: /health/
  #       healthResponseCodes:
  #         - 200
  #
  #     routes:
  #       - group: public
  #         methods:
  #           - GET
  #         downstreamUrl: /fact
  #         protocol: https
  #
  # ? --------------------------------------------------------------------------
  routes: test/mock/routes.yaml

# ? ----------------------------------------------------------------------------
# ? API PORT SETTINGS SETTINGS
# ? ----------------------------------------------------------------------------
cli: {}
