# ? ----------------------------------------------------------------------------
# ? VAULT CONFIGURATIONS
# ? ----------------------------------------------------------------------------
vault: !enabled
  url: "http://localhost:8200"
  versionWithNamespace: v1/kv

  # The vault token is the unique variable restricted to direct setting or
  # environment variable. It is used to authenticate the vault client.
  token:
    env: MYC_VAULT_TOKEN

# ? ----------------------------------------------------------------------------
# ? CORE CONFIGURATIONS
# ? ----------------------------------------------------------------------------
core:
  # Config related to the account life cycle
  accountLifeCycle:
    # Less important settings should be set directly in the config file
    #
    # The domain name is used to set the email domain. It is used to send the
    # email notifications to the users.
    #
    domainName: Mycelium
    domainUrl: http://localhost:8080

    #
    # The token expiration is used to configure the JWT token expiration time.
    #
    tokenExpiration: 3600 # 1 hour

    #
    # The locale sets the language to send the email notifications.
    #
    locale: "en-us"

    # More important settings should be set from environment variables or vault
    noreplyName:
      env: MYC_NOREPLY_NAME
    noreplyEmail:
      env: MYC_NOREPLY_EMAIL
    supportName:
      env: MYC_SUPPORT_NAME
    supportEmail:
      env: MYC_SUPPORT_EMAIL

    # Token secret should be set from vault
    tokenSecret:
      vault:
        path: myc/core/accountLifeCycle
        key: tokenSecret

# ? ----------------------------------------------------------------------------
# ? SQL DATABASE ADAPTER SETTINGS
# ? ----------------------------------------------------------------------------
diesel:
  databaseUrl:
    env: MYC_DATABASE_URL

# ? ----------------------------------------------------------------------------
# ? NOTIFIER ADAPTER SETTINGS SETTINGS
#
# SMTP and QUEUE value should be set disabled or configured with the smtp host,
# username, and password. Case the smtp is disabled, the email notification will
# not be sent.
#
# ? ----------------------------------------------------------------------------
smtp: !enabled
  host:
    env: MYC_SMTP_HOST
  # ! Should be collected from vault or environment variable in production
  username:
    vault:
      path: myc/smtp
      key: username
  # ! Should be collected from vault or environment variable in production
  password:
    vault:
      path: myc/smtp
      key: password

queue: !enabled
  protocol: redis # should be rediss for secure connection
  hostname: localhost
  emailQueueName: emails
  consumeIntervalInSecs: 30

  password:
    vault:
      path: myc/queue
      key: password

# ? ----------------------------------------------------------------------------
# ? AUTHENTICATION SETTINGS
#
# Authentication settings are used to configure the authentication methods.
# Default method is internal. It uses the database adapter plus the redis to
# flow along the users life cycle. Case the internal flow is enabled, user
# should configure the redis adapters using the adapters yaml file.
#
# It is possible to use third party authentication methods like google and azure
# oauth providers.
#
# ? ----------------------------------------------------------------------------
auth:
  # Internal authentication is the default authentication method. It uses the
  # database adapter plus the redis to flow along the users life cycle.
  internal: !enabled
    jwtExpiresIn: 43200 # 12 hours
    tmpExpiresIn: 300 # 5 minutes

    jwtSecret:
      vault:
        path: myc/auth/internal
        key: jwtSecret

  # Google third party authentication. It uses the google oauth2 to authenticate
  # the user. It requires a valid client id and secret.
  google: !enabled
    clientOrigin: http://localhost:3000
    redirectUrl: http://localhost:3000
    jwtExpiresIn: 60m
    jwtMaxAge: 60

    # ! Should be collected from vault or environment variable in production
    jwtSecret:
      vault:
        path: myc/auth/google
        key: jwtSecret

    # ! Should be collected from vault or environment variable in production
    clientId:
      vault:
        path: myc/auth/google
        key: clientId

    # ! Should be collected from vault or environment variable in production
    clientSecret:
      vault:
        path: myc/auth/google
        key: clientSecret

  # Azure third party authentication. It uses the azure oauth2 to authenticate
  # the user. It does not require a valid client id and secret. Working only
  # with the azure active directory.
  azure: !enabled
    redirectUrl: http://localhost:8080
    callbackPath: /adm/auth/azure/token
    csrfTokenExpiration: 300 # 5 minutes
    clientOrigin: http://localhost:8080

    jwtSecret:
      vault:
        path: myc/auth/azure
        key: jwtSecret

    # ! Should be collected from vault or environment variable in production
    tenantId:
      vault:
        path: myc/auth/azure
        key: tenantId

    # ! Should be collected from vault or environment variable in production
    clientId:
      vault:
        path: myc/auth/azure
        key: clientId

    # ! Should be collected from vault or environment variable in production
    clientSecret:
      vault:
        path: myc/auth/azure
        key: clientSecret

# ? ----------------------------------------------------------------------------
# ? API PORT SETTINGS SETTINGS
# ? ----------------------------------------------------------------------------
api:
  serviceIp: 0.0.0.0
  servicePort: 8080
  serviceWorkers: 1
  gatewayTimeout: 60
  allowedOrigins:
  - http://localhost:8080
  - http://localhost:3000
  # ? --------------------------------------------------------------------------
  # ? LOGGING SETTINGS
  # ? --------------------------------------------------------------------------
  logging:
    # Possible values: trace, debug, info, warn, error or specific level for
    # each module.
    level: actix_web=info,mycelium_base=info,myc_api=trace,myc_diesel=trace,myc_core=trace

    # Possible values: jsonl, ansi
    format: ansi

    # Specify the log target. Possible values: stdout, file, or jaeger
    # Example with file target
    #target: !file
    #  path: logs/api.log

    # Example with stdout target
    #target: stdout

    target: !jaeger
      name: mycelium-api
      # Hostname of the jaeger agent
      host: localhost
      # Allowed values:
      # - http
      # - https
      # - grpc
      protocol: grpc
      # Use (for default ports for each protocol):
      port: 4317

  # ? --------------------------------------------------------------------------
  # ? API GATEWAY TLS SETTINGS
  #
  # TLS settings are used to configure the api gateway tls. It is possible to
  # configure the tls using the tls_cert_path and tls_key_path. Case the tls
  # cert path and tls key path are not configured, the api gateway will not be
  # able to connect to secure forwarding routes.
  #
  # ? --------------------------------------------------------------------------
  tls: !enabled
    tlsCert:
      vault:
        path: myc/api/tls
        key: tlsCert

    tlsKey:
      vault:
        path: myc/api/tls
        key: tlsKey

  # ? --------------------------------------------------------------------------
  # ? API GATEWAY ROUTE CONFIGURATION
  #
  # Routes file should be used to configure the api gateway routes. Routes file
  # should contains the following structure:
  #
  # services:
  #   - name: cat
  #     host: catfact.ninja
  #
  #     healthCheck:
  #       path: /health/
  #       healthResponseCodes:
  #         - 200
  #
  #     routes:
  #       - group: public
  #         methods:
  #           - GET
  #         downstreamUrl: /fact
  #         protocol: https
  #
  # ? --------------------------------------------------------------------------
  routes: test/mock/routes.yaml

# ? ----------------------------------------------------------------------------
# ? API PORT SETTINGS SETTINGS
# ? ----------------------------------------------------------------------------
cli: {}
