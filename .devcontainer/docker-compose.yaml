# ? ----------------------------------------------------------------------------
# ? NETWORK DEFINITION
# ? ----------------------------------------------------------------------------
networks:
  mycelium_net:
    driver: bridge

# ? ----------------------------------------------------------------------------
# ? SHARED CONFIGURATION
# ? ----------------------------------------------------------------------------
x-common-mycelium: &common-config
  networks: &common-networks
    - mycelium_net
  env_file:
    - .env

# ? ----------------------------------------------------------------------------
# ? SERVICES DEFINITION
# ? ----------------------------------------------------------------------------
services:
  myc-postgres-devcontainer:
    extends:
      file: ../docker-compose.common.yaml
      service: myc-postgres

    <<: *common-config
    container_name: myc-postgres-devcontainer

  myc-jaeger-devcontainer:
    extends:
      file: ../docker-compose.common.yaml
      service: myc-jaeger

    <<: *common-config
    container_name: myc-jaeger-devcontainer

  myc-prometheus-devcontainer:
    extends:
      file: ../docker-compose.common.yaml
      service: myc-prometheus

    <<: *common-config
    container_name: myc-prometheus-devcontainer

  myc-grafana-devcontainer:
    extends:
      file: ../docker-compose.common.yaml
      service: myc-grafana

    <<: *common-config
    container_name: myc-grafana-devcontainer

  myc-otel-collector-devcontainer:
    extends:
      file: ../docker-compose.common.yaml
      service: myc-otel-collector

    networks: *common-networks
    container_name: myc-otel-collector-devcontainer
    depends_on:
      - myc-jaeger-devcontainer
      - myc-prometheus-devcontainer


  myc-redis-devcontainer:
    extends:
      file: ../docker-compose.common.yaml
      service: myc-redis

    <<: *common-config
    container_name: myc-redis-devcontainer

  myc-vault-devcontainer:
    extends:
      file: ../docker-compose.common.yaml
      service: myc-vault

    networks: *common-networks

    build:
      context: ./vault
      dockerfile: Dockerfile
      args:
        UID: 1001
        GID: 1001

    volumes:
      - ./vault/logs:/vault/logs/:rw
      - ./vault/data:/vault/data/:rw
      - ./vault/config:/vault/config/:rw
      - ./vault/file:/vault/file/:rw

    container_name: myc-vault-devcontainer

  myc-devcontainer:
    # Inject all shared configs
    <<: *common-config

    image: mcr.microsoft.com/vscode/devcontainers/rust:latest
    command: sleep infinity
    environment:
      - MYC_VAULT_TOKEN=${MYC_VAULT_TOKEN}
    volumes:
      - ../..:/workspaces:cached
    ports:
      - 8080:8080

    depends_on:
      - myc-postgres-devcontainer
      - myc-jaeger-devcontainer
      - myc-redis-devcontainer
      - myc-vault-devcontainer
